import org.krohm.milleborne.engineimpl.InternalActionExecutionContext;
import org.krohm.milleborne.actions.useractions.PlayCardAction;
import org.krohm.milleborne.actions.useractions.GameInitAction;
import org.slf4j.Logger;
import org.krohm.milleborne.util.DrlUtil;
import org.krohm.milleborne.actions.internalactions.*;
import org.krohm.milleborne.data.Steps;


#
# TODO : add InternalAction on Game Actions
#

rule "Input Log"
      salience 65000
      dialect "java"
  when
      context : InternalActionExecutionContext (userAction : userAction,currentStep == Steps.STEP_USER_ACTION)
  then
       Logger logger = DrlUtil.getLogger();
       logger.error("Hop !");
end


rule "PlayCardAction"
      salience 15
      dialect "java"
  when
      context : InternalActionExecutionContext (userAction : userAction,currentStep == Steps.STEP_USER_ACTION)
      eval(userAction instanceof PlayCardAction)
  then
      PlayCardAction typedAction = (PlayCardAction) userAction;
      System.out.println( "First Nimp Ever !" );
      System.out.println( "First Nimp Ever !" + typedAction.toString());
end

rule "GameInitAction"
      salience 15
      dialect "java"
  when
      context : InternalActionExecutionContext (userAction : userAction,currentStep == Steps.STEP_USER_ACTION)
      eval(userAction instanceof GameInitAction)
  then
      Logger logger = DrlUtil.getLogger();
      GameInitAction typedAction = (GameInitAction) userAction;
      ShuffleDeckAction shuffleAction = new ShuffleDeckAction();
      context.getTodoList().offer(shuffleAction);
      shuffleAction = new ShuffleDeckAction();
      context.getTodoList().offer(shuffleAction);
      logger.error("####");
end