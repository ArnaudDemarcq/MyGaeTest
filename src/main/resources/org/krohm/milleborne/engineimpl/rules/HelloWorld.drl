package org.krohm.milleborne.engineimpl.rules

import org.krohm.milleborne.engineimpl.MilleBorneGame;
import org.krohm.milleborne.engineimpl.context.*;
import org.krohm.milleborne.actions.internalactions.*;
import org.krohm.milleborne.actions.returnactions.*;
import org.krohm.milleborne.actions.useractions.*;
import org.krohm.milleborne.actions.*;
import org.krohm.milleborne.data.*;
import org.krohm.milleborne.util.*;
import org.slf4j.Logger;



#
# TODO : add InternalAction on Game Actions
#

rule "Input Log"
      salience 65000
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      logger : Logger ();
  then
     #  Logger logger = DrlUtil.getLogger();
       logger.error("Hop from inserted logger!");
       Class tmpClass = new Object(){}.getClass();
       logger.error("CurrentClass => " + tmpClass);
       Logger logger2= DrlUtil.getLogger(tmpClass);
       logger.error("CurrentClass => " + tmpClass.getDeclaringClass());
       logger2.error("Dow !");
end


rule "PlayCardAction"
      salience 15
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      userAction : IUserAction ()
      eval(userAction instanceof PlayCardAction)
  then
      PlayCardAction typedAction = (PlayCardAction) userAction;
      System.out.println( "First Nimp Ever !" );
      System.out.println( "First Nimp Ever !" + typedAction.toString());
end


rule "GameInitActionOLD"
      salience 15
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      userAction : IUserAction ()
      todoList : InternalActionQueue ()
      eval(userAction instanceof GameInitAction)
      gameData : MilleBorneGame()
      eval(userAction instanceof PlayCardAction ) # should be false => disables this rule
  then
      Logger logger = DrlUtil.getLogger();
      GameInitAction typedAction = (GameInitAction) userAction;
# Reset, Shuffle.
      ResetDeckAction resetAction = new ResetDeckAction();
      todoList.offer(resetAction);
      ShuffleDeckAction shuffleAction = new ShuffleDeckAction();
      todoList.offer(shuffleAction);
# And make every Player Draw 6 cards
     for ( Long currentPlayerId : gameData.getGamePlayers().keySet())
       {
            DrawCardAction currentDrawCardAction = new DrawCardAction();
            currentDrawCardAction.setPlayerId(currentPlayerId);
            currentDrawCardAction.setCardNumber(6);
            todoList.offer(currentDrawCardAction);
       }
      
      
end

rule "GameInitActionNew"
      salience 15
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      userAction : GameInitAction ()
      todoList : InternalActionQueue ()
      gameData : MilleBorneGame()
  then
      todoList.offer(new IntenalInitAction());
end