import org.krohm.milleborne.engineimpl.context.*;
import org.krohm.milleborne.actions.internalactions.*;
import org.krohm.milleborne.actions.returnactions.*;
import org.krohm.milleborne.actions.useractions.*;
import org.krohm.milleborne.actions.*;
import org.krohm.milleborne.data.*;
import org.krohm.milleborne.util.*;
import org.slf4j.Logger;


#
# TODO : add InternalAction on Game Actions
#

rule "Input Log"
      salience 65000
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      logger : Logger ();
  then
     #  Logger logger = DrlUtil.getLogger();
       logger.error("Hop from inserted logger!");
end


rule "PlayCardAction"
      salience 15
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      userAction : IUserAction ()
      eval(userAction instanceof PlayCardAction)
  then
      PlayCardAction typedAction = (PlayCardAction) userAction;
      System.out.println( "First Nimp Ever !" );
      System.out.println( "First Nimp Ever !" + typedAction.toString());
end

rule "GameInitAction"
      salience 15
      dialect "java"
  when
      context : ExecutionContext (currentStep == Steps.STEP_USER_ACTION)
      userAction : IUserAction ()
      todoList : InternalActionQueue ()
      eval(userAction instanceof GameInitAction)
  then
      Logger logger = DrlUtil.getLogger();
      GameInitAction typedAction = (GameInitAction) userAction;
      ShuffleDeckAction shuffleAction = new ShuffleDeckAction();
      todoList.offer(shuffleAction);
      shuffleAction = new ShuffleDeckAction();
      todoList.offer(shuffleAction);
      logger.error("####" + todoList.size());
      
end